[{"url":"http://xiaoyan-sun.github.io/2016/10/23/gitlab的仓库备份同步-md/","title":"gitlab的仓库备份同步.md","excerpt":"<h2 id=\"需求背景\">需求背景</h2><p>在公网上搭建一个gitlab服务器，所有项目代码的更新、提交都在这个服务器中进行，实现对代码的版本控制。同时在本地的局域网内再搭建一个gitlab服务器，把项目中每天的代码变化同步到这个服务器的项目中，备份。</p>\n<h2 id=\"方法\">方法</h2><h3 id=\"方法一\">方法一</h3><p>最基本方法，使用git的pull、push等命令编写shell脚本，大概思路如下：<br><figure class=\"highlight crmsh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"keyword\">clone</span> <span class=\"title\">[src_url</span>.git]</span><br><span class=\"line\">cd $proj_dir</span><br><span class=\"line\">git remote add hf-origin [dst_url.git]</span><br><span class=\"line\"></span><br><span class=\"line\">git checkout <span class=\"keyword\">master</span> </span><br><span class=\"line\"><span class=\"title\">git</span> pull </span><br><span class=\"line\">git push hf-origin <span class=\"literal\">master</span>:<span class=\"keyword\">master</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title\">git</span> checkout develop</span><br><span class=\"line\">git pull </span><br><span class=\"line\">git push hf-origin develop:develop</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"方法二\">方法二</h3>"},{"url":"http://xiaoyan-sun.github.io/2016/10/23/将时间戳转换为标准时间/","title":"将时间戳转换为标准时间","excerpt":"<h2 id=\"将时间戳转换为标准时间\">将时间戳转换为标准时间</h2><h3 id=\"命令\">命令</h3><h4 id=\"date\">date</h4><figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">date -d <span class=\"string\">\"<span class=\"variable\">@234898753</span>\"</span> [+ <span class=\"string\">\"<span class=\"variable\">%Y</span><span class=\"variable\">%m</span><span class=\"variable\">%d</span> <span class=\"variable\">%H</span>:<span class=\"variable\">%M</span>:<span class=\"variable\">%S</span>\"</span>]</span><br><span class=\"line\">date -d <span class=\"string\">\"1970-01-01 utc 1279592730 seconds\"</span></span><br><span class=\"line\">date -d <span class=\"string\">\"1970-01-01 utc 1279592730 seconds\"</span> +<span class=\"string\">\"<span class=\"variable\">%F</span> <span class=\"variable\">%H</span>:<span class=\"variable\">%M</span>:<span class=\"variable\">%S</span>\"</span> <span class=\"number\">2010</span>-<span class=\"number\">07</span>-<span class=\"number\">20</span> <span class=\"number\">10</span>:<span class=\"number\">25</span>:<span class=\"number\">30</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"awk\">awk</h4><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title\">echo</span> <span class=\"string\">\"12387334534\"</span> | awk <span class=\"string\">'&#123;print strftime (\"%F %T\", <span class=\"variable\">$0</span>)&#125;'</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"perl\">perl</h4><p>使用perl方式处理<br><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">perl -<span class=\"keyword\">e</span> '<span class=\"keyword\">print</span> localtime(1927375454).<span class=\"string\">\"\\n\"</span>;'</span><br></pre></td></tr></table></figure></p>"},{"url":"http://xiaoyan-sun.github.io/2016/08/22/git常用总结/","title":"git常用总结","excerpt":"<h2 id=\"题外随笔\">题外随笔</h2><blockquote>\n<p>上周末去了老同学家里，参观了下他设计装修的新房，相当的不错，等完全装修完工，还得多去参观学习才是。</p>\n</blockquote>\n<h2 id=\"git简介\">git简介</h2><ul>\n<li>git像是一个内容寻址的文件系统,他并不像其他大多数版本控制工具一样，使用文件变更列表的方式存储信息。</li>\n<li>git的近乎所有操作都是本地完成，速度非常快</li>\n<li>git保证完整性，Git中所有数据在存储前都计算校验和，然后以校验和来引用。</li>\n<li>git一般只添加数据，更加的安全和随心所欲，而且方便数据找回</li>\n<li>git数据主要分三种状态 working-directory —&gt; staging area —–&gt; .git directory(repository)</li>\n</ul>"},{"url":"http://xiaoyan-sun.github.io/2016/09/01/puppet以及yum和gitlab命令/","title":"puppet以及yum和gitlab命令","excerpt":"<h2 id=\"解压缩rpm包\">解压缩rpm包</h2><pre><code>rpm2cpio package_name <span class=\"string\">| cpio -div</span>\n</code></pre><h2 id=\"创建自己的yum源\">创建自己的yum源</h2><pre><code><span class=\"title\">createrepo</span>   <span class=\"comment\">#在有Packages子目录的目录下执行该命令创建repo</span>\n</code></pre><h2 id=\"puppet相关命令\">puppet相关命令</h2><h3 id=\"puppet启动\">puppet启动</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service puppetserver <span class=\"operator\"><span class=\"keyword\">start</span> | restart | <span class=\"keyword\">stop</span>     #<span class=\"keyword\">master</span></span><br><span class=\"line\">sudo puppet <span class=\"keyword\">resource</span> service puppet ensure=running <span class=\"keyword\">enable</span>=<span class=\"literal\">true</span>  #<span class=\"keyword\">agent</span> </span><br><span class=\"line\"></span><br><span class=\"line\">#puppet <span class=\"keyword\">agent</span>第一次启动会向<span class=\"keyword\">master</span>发送CSR证书签名请求，<span class=\"keyword\">master</span>对CSR的处理相关命令如下：</span><br><span class=\"line\">sudo puppet cert <span class=\"keyword\">list</span> [<span class=\"comment\">--all]</span></span><br><span class=\"line\">sudo puppet cert <span class=\"keyword\">sign</span> &lt;<span class=\"keyword\">NAME</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"url":"http://xiaoyan-sun.github.io/2016/09/01/Win设置无线外网和有线内网/","title":"Win设置无线外网和有线内网","excerpt":"<h3 id=\"设置方法主要分为三步\">设置方法主要分为三步</h3><ul>\n<li>一是使用route命令设置路由，将访问内外网的路由分别设置为对应网关</li>\n<li>二是设置正确的dns服务器地址，保证内外网域名解析正确</li>\n<li>三是如果依然有内网服务无法解析域名，可以手动将其添加到hosts文件</li>\n</ul>\n<h3 id=\"示例代码如下：\">示例代码如下：</h3>"},{"url":"http://xiaoyan-sun.github.io/about/index.html","title":"Welcome!!","excerpt":""},{"url":"http://xiaoyan-sun.github.io/2015/11/17/my-first-article/","title":"my_first_article","excerpt":"<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert<span class=\"list\">(<span class=\"string\">\"helloworld,hello hexo\"</span>)</span><span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">\"hello world!\\n\"</span>);</span><br></pre></td></tr></table></figure>\n<h1 id=\"标题1\">标题1</h1><h2 id=\"标题2\">标题2</h2><h3 id=\"标题3\">标题3</h3><blockquote>\n<p>This is a test blockquote</p>\n<blockquote>\n<p>this is a test block quote</p>\n</blockquote>\n</blockquote>"},{"url":"http://xiaoyan-sun.github.io/2015/11/16/hello-world/","title":"Hello World","excerpt":""}]